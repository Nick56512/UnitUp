<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--ANIMATIONS-->
    <Storyboard x:Key="SlideDown">
        <DoubleAnimation Storyboard.TargetProperty="(TextBox.Height)"
                             From="0" To="30"
                             Duration="0:0:0.2" />
    </Storyboard>

    <Storyboard x:Key="SlideUp">
        <DoubleAnimation Storyboard.TargetProperty="(TextBox.Height)"
                              From="30" To="0" 
                              Duration="0:0:0.2" />
    </Storyboard>
    <!--END ANIMATIONS-->
    
    <!--CALENDAR-->
    
    
    
    
    <!--CALENDAR-->
    
    
    
    
    <Style x:Key="Header1">
        <Setter Property="TextElement.FontFamily" Value="Nunito"></Setter>
        <Setter Property="TextElement.FontSize" Value="30"></Setter>
        <Setter Property="TextElement.Foreground" Value="#F5F5F5"></Setter>
    </Style>

    <Style x:Key="GroupsListView" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontFamily" Value="PT Sans"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontSize" Value="25"></Setter>
    </Style>


    <Style TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False"></Setter>
        <Setter Property="GridLinesVisibility" Value="None"></Setter>
        <Setter Property="CanUserDeleteRows" Value="False"></Setter>
        <Setter Property="CanUserResizeRows" Value="False"></Setter>
        <Setter Property="CanUserSortColumns" Value="False"></Setter>
        <Setter Property="CanUserResizeColumns" Value="False"></Setter>
        
        <Setter Property="FontFamily" Value="PT Sans"></Setter>
        <Setter Property="FontSize" Value="25"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="CanUserDeleteRows" Value="False"></Setter>
        <Setter Property="CanUserAddRows" Value="False"></Setter>
        <Setter Property="IsReadOnly" Value="True"></Setter>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
      
        <Setter Property="HeadersVisibility" Value="None"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="CanUserReorderColumns" Value="False"></Setter>

       
       
       
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Margin" Value="0,15,0,0"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="PT Sans"></Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type TextBoxBase}" x:Key="DefaultTextBox">
        <Border CornerRadius="3" BorderThickness="1" Background="White">
            <Border.BorderBrush>
                <SolidColorBrush Color="DarkGray" Opacity="0.22"></SolidColorBrush>
            </Border.BorderBrush>
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="80"></Setter>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="30"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="AnimatedTextBox" TargetType="TextBox">
        <Setter Property="TextBox.FontSize" Value="19"></Setter>
        <Setter Property="TextBox.FontWeight" Value="Normal"></Setter>
        <Setter Property="TextBox.FontFamily" Value="PT Sans"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=AddGroupToggleButton}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource SlideDown}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource SlideUp}" />
                </DataTrigger.ExitActions>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" x:Key="OpenContextMenuStyle">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Click">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
        
    </Style>
   
    
    
    
    
    
    <!--<Style x:Key="Popup_style" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid Width="180" Height="Auto" >
                        <Path Panel.ZIndex="1" Stroke="Orange" StrokeThickness="0.02" 
                              Data="M11.3,0 L11.3,0 L168.5,0 A12,12 0 0 1 179.99,12 L179.99,78.5 A12,12 0 0 1 168.5,90 L11.3,90 A12,12 0 0 1 0,78.5 L0,12 A12,12 0 0 1 11.3,0 z "/>
                        <Border Background="White" CornerRadius="6" BorderThickness="1" BorderBrush="Gray">
                            <StackPanel>
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" />
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="ListViewItemBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="ListViewItemBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="ListViewItemBorder" Value="Transparent"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="ListViewItemBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="ListViewItemBorder" Value="Transparent"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->



</ResourceDictionary>